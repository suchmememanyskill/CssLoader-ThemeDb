# This is a basic workflow to help you get started with Actions

name: push CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  schedule:
    - cron: "0 0 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install requirements
        run: pip install -r requirements.txt

      - shell: bash
        env:
          SECRET_APPLICATIONKEY: ${{ secrets.SECRET_APPLICATIONKEY }}
          SECRET_ENDPOINT: ${{ secrets.SECRET_ENDPOINT }}
          SECRET_KEYID: ${{ secrets.SECRET_KEYID }}
          SECRET_DISCORD_WEBHOOKS: ${{ secrets.SECRET_DISCORD_WEBHOOKS }}
        name: Build themes.json
        run: python3 main.py upload

      - name: Upload themes.json
        uses: WebFreak001/deploy-nightly@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
        with:
          upload_url: https://uploads.github.com/repos/suchmememanyskill/CssLoader-ThemeDb/releases/74326961/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
          release_id: 74326961 # same as above (id can just be taken out the upload_url, it's used to find old releases)
          asset_path: ./themes.json # path to archive to upload
          asset_name: themes.json # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/json # required by GitHub API
          max_releases: 1 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted

      - uses: actions/upload-artifact@v3
        with:
          name: Generated Theme Zips
          path: zips
